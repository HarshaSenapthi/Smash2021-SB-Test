<apex:page standardController="Opportunity" extensions="opportunityProductEntryExtension" action="{!priceBookCheck}" lightningStylesheets="true" id="pg">
     <head>
      <meta charset="utf-8" />
        <meta http-equiv="x-ua-compatible" content="ie=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      <!-- Import the Design System style sheet -->
      <apex:slds />
    </head> 
   
    <apex:sectionHeader Title="Manage {!$ObjectType.Product2.LabelPlural}" subtitle="{!opportunity.Name}"/>
    <apex:messages />

    <style>
        .search{
            font-size:14pt;
            margin-right: 20px;    
        }
        .fyi{
            color:red;
            font-style:italic;
        }
        .label{
            margin-right:10px;
            font-weight:bold;
        }
        .buttoncls{
            background-color: #337ab7;
            border-color: #2e6da4;     
        }

    </style>
    
    <script type='text/javascript'>
    
        // This script assists the search bar functionality
        // It will execute a search only after the user has stopped typing for more than 1 second
        // To raise the time between when the user stops typing and the search, edit the following variable:
        
        var waitTime = 1;
        
    
        var countDown = waitTime+1;
        var started = false;
        document.addEventListener("DOMContentLoaded", function(){
        var myVar2 = setTimeout(intialPosition, 700);
        });        
        function calltimer(){
           var myVar = setTimeout(intialPosition, 700);
        }
           function intialPosition(){
            var obj = '{!shoppingCart.SIZE}';
            console.log(obj);
            
           if(obj==0)
           {
               document.documentElement.scrollTop =getOffset(document.getElementById('insidePb')).top; 
           }
           }
        function resetTimer(){
        
            countDown=waitTime+1;
            
            if(started==false){
                started=true;
                runCountDown();
            }
        }
        
        function runCountDown(){
        
            countDown--;
            
            if(countDown<=0){
                fetchResults();
                started=false;
                intialPosition();
            }
            else{
                window.setTimeout(runCountDown,1000);
            }
        }
    function Totals(c,d)
    {

        if((d.indexOf('Quantity') >=0 || d.indexOf('UnitPrice') >=0 || d.indexOf('AmountC__c')>=0) )
        {
            
            refreshTotals(c);
        }
    }

    function scrollFun(passedvalue){
        var a = parseInt(passedvalue) ;
        if(a>2){
        document.documentElement.scrollTop =getOffset(document.getElementById('scrollDiv'+String(a-2))).top;
        }else{
           document.documentElement.scrollTop =getOffset(document.getElementById('pageBlock')).top; 
        }
    }
    
    function getOffset(el) {
      const rect = el.getBoundingClientRect();
      return {
        left: rect.left + window.scrollX,
        top: rect.top + window.scrollY
      };
    }  
    function convertToNumber(idval, numberval){
        document.getElementById(idval).innerHTML = new Intl.NumberFormat().format(numberval);
    }
    </script>
   
  
    <apex:form id="fm">
     <div class="slds-scope">
        <apex:outputPanel id="mainBody">
        
            <apex:outputLabel styleClass="label">PriceBook: </apex:outputLabel>
            <apex:outputText value="{!theBook.Name}"/>&nbsp;
            <apex:commandLink action="{!changePricebook}" value="change" immediate="true"/>
            <br/>
            <!-- not everyone is using multi-currency, so this section may or may not show -->
            <apex:outputPanel rendered="{!multipleCurrencies}">
                <apex:outputLabel styleClass="label">Currency: </apex:outputLabel>
                <apex:outputText value="{!chosenCurrency}"/>
                <br/>
            </apex:outputPanel>
            <br/>
                            <div id="pageBlock">
                    
                </div>
<!-- this is the upper table... a.k.a. the "Shopping Cart"-->

            <!-- notice we use a lot of $ObjectType merge fields... I did that because if you have changed the labels of fields or objects it will reflect your own lingo -->
            <apex:pageBlock title="Selected {!$ObjectType.Product2.LabelPlural}" id="selected">
                <apex:variable var="i" value="{!0}"/>         
                <apex:pageBlockTable value="{!shoppingCart}" var="s" >
        
                    <apex:column >
                         
                        <apex:commandLink value="Clone" action="{!cloneProduct}" reRender="selected,searchResults" immediate="true">
                            <!-- this param is how we send an argument to the controller, so it knows which row we clicked 'remove' on -->
                            <apex:param value="{!i}" name="index"/>
                        </apex:commandLink>
                        
                        
                        | <apex:commandLink value=" Remove" action="{!removeFromShoppingCart}" reRender="selected,searchResults" immediate="true">
                            <!-- this param is how we send an argument to the controller, so it knows which row we clicked 'remove' on -->
                            <apex:param value="{!s.PriceBookEntryId}" assignTo="{!toUnselect}" name="toUnselect"/>
                            <apex:param value="{!s.Id}" name="delRecId"/>
                            <apex:param value="{!i}" name="index"/>
                        </apex:commandLink>
                        
                    </apex:column>
                    
                    
                    <apex:column headerValue="Product Name"  value="{!s.PriceBookEntry.Product2.Name}"/>
                    
                    <apex:column headerValue="Quantity" >
                        <apex:inputField value="{!s.Quantity}" style="width:70px" required="true" onchange="Totals('{!i}','Quantity');"/>
                    </apex:column>
                    
                    <apex:column headerValue="{!$ObjectType.OpportunityLineItem.Fields.UnitPrice.Label}">
                        <apex:inputField value="{!s.UnitPrice}"  style="width:90px" required="true" onchange="Totals('{!i}','Quantity');"/>
                    </apex:column>

                    <apex:column headerValue="{!$ObjectType.OpportunityLineItem.Fields.Subtotal.Label}">
                        <!--<apex:inputField value="{!s.Subtotal}" style="width:70px"/>-->
                        <apex:variable var="subTotal" value="{!(s.UnitPrice * s.Quantity)}"/>
                                <Span id="subtotal{!i}" ><script>convertToNumber('subtotal{!i}','{!TEXT(subTotal)}');</script> </Span>
                    </apex:column>
                                        
                    <!--<apex:column headerValue="{!$ObjectType.OpportunityLineItem.Fields.Description.Label}">
                        <apex:inputField value="{!s.Description}" required="false"/>
                    </apex:column>-->
                    
                    <apex:column headerValue="{!$ObjectType.OpportunityLineItem.Fields.AmountC__c.Label}">
                        <apex:inputField value="{!s.AmountC__c}" style="width:70px" required="false" onchange="Totals('{!i}','Quantity');"/>
                        <apex:facet name="footer">
                            <span style="font-size:24px;"> <b>Grand Total :</b>{!IF(chosenCurrency ==null,'$',chosenCurrency)} </span>
                        </apex:facet>    
                    </apex:column>  
                    <apex:column headerValue="{!$ObjectType.OpportunityLineItem.Fields.TotalPrice__c.Label}">
                        <apex:inputField value="{!s.TotalPrice__c}"  required="false" onchange="TotalPriceChange('{!i}')"/>
                        <apex:facet name="footer">
                        <span style="font-size:24px;"><Span id="grandtotal" ><script>convertToNumber('grandtotal','{!OppTotals}');</script> </Span> </span>
                   
                         
                          
                        </apex:facet>         
                    </apex:column>                      
                    <apex:column headerValue="{!$ObjectType.OpportunityLineItem.Fields.Grade__c.Label}">
                        
                        <apex:inputField value="{!s.Grade__c}" style="width:70px" required="false"/>
                        <apex:variable var="i" value="{!i+1}"/>
                        <div id="scrollDiv{!i}"></div> 
                    </apex:column>

                </apex:pageBlockTable>
            
            
                <apex:pageBlockButtons styleClass="slds-button" location="bottom">
                    <apex:commandButton action="{!onSave}" value="Save" styleClass="slds-button slds-button_outline-brand" style="color: #fff;  background-color: rgb(162, 226, 147);border-color: rgb(162, 226, 147)"/>
                    <apex:commandButton action="{!onCancel}" value="Cancel" immediate="true" styleClass="slds-button slds-button_outline-brand" style="color: #fff; background-color: #6f706d; border-color: #6f706d;"/>
                </apex:pageBlockButtons>
            
            </apex:pageBlock>
                                    
                        
                        
            <apex:actionFunction action="{!refreshTotals}" name="refreshTotals" rerender="fm,searchResults" Status="searchStatus">
            <apex:param name="index"  value="" />
            </apex:actionFunction> 
            <apex:actionFunction action="{!TotalPriceChange}" name="TotalPriceChange" rerender="fm,searchResults" Status="searchStatus">
                <apex:param name="index"  value="" />
            </apex:actionFunction>  
<!-- this is the lower table: search bar and search results -->
    
            <apex:pageBlock >

                <!-- styleClass="search" -->
  

                <apex:actionRegion renderRegionOnly="false" immediate="true">
                
                    <apex:actionFunction name="fetchResults" action="{!updateAvailableList}"  status="searchStatus" reRender="searchResults,op,fm" />
                    <!-- here we invoke the scripting to get out fancy 'no button' search bar to work 
                    onkeydown="if(event.keyCode==13){this.blur();}else{resetTimer();}" -->
                    <div id="insidePb"></div>
                    <div class="slds-grid  slds-grid_align-space ">
                    <div class=" slds-col ">
                    <apex:outputPanel >
                    Search for {!$ObjectType.Product2.LabelPlural}
                    </apex:outputPanel>  
                    <apex:inputText value="{!searchString}"  style="width:300px" onkeyup="resetTimer();"/>
    
                    </div>
                    <div class="slds-col ">
                    <apex:OutputLabel >{!$ObjectType.Product2.Fields.Curriculum__c.Label} &nbsp;</apex:OutputLabel>
                    <apex:inputField value="{!search.Curriculum__c}" onChange="resetTimer();"/>    
                    </div>
                    <div class="slds-col ">
                    <apex:OutputLabel >{!$ObjectType.Product2.Fields.Product_Type__c.Label}</apex:OutputLabel>
                    <apex:inputField value="{!search.Product_Type__c}" onChange="resetTimer();"/> 
                    </div>
                    <div class="slds-col">
                           &nbsp;
                            <apex:commandButton value="Reset Filters" styleClass="slds-button slds-button_destructive" action="{!clearfilter}"  reRender="searchResults,op,fm" oncomplete="intialPosition();"/> 
                    </div>
                   </div>
                 </apex:actionRegion>
            
                <br/>
                <br/>
            
                <apex:outputPanel id="searchResults">
                    <apex:pageBlockTable value="{!AvailableProducts}" var="a" >
                        <apex:column headerValue="{!$ObjectType.Product2.Fields.Name.Label}" value="{!a.Product2.Name}" />
                                              
                        <apex:column headerValue="{!$ObjectType.Product2.Fields.Curriculum__c.Label}" value="{!a.Product2.Curriculum__c}"/>
                        
                        <apex:column headerValue="{!$ObjectType.Product2.Fields.Family.Label}" value="{!a.Product2.Family}"/>
                        
                        <apex:column headerValue="{!$ObjectType.Product2.Fields.ProductCode.Label}" value="{!a.Product2.ProductCode}"/>
                        
                        <apex:column headerValue="{!$ObjectType.Product2.Fields.Description.Label}" value="{!a.Product2.Description}"/>
                        
                        <apex:column >
                            <!-- command button in a column... neato -->
                            <apex:commandButton value="Select" action="{!addToShoppingCart}" reRender="selected,searchResults" immediate="true" styleClass="slds-button slds-button_outline-brand" style="border-color: #4caf50;" oncomplete="scrollFun('{!shoppingCart.SIZE}');">
                                <!-- again we use apex:param to be able to tell the controller which row we are working with -->
                                <apex:param value="{!a.Id}" assignTo="{!toSelect}" name="toSelect"/>
                            </apex:commandButton>
                        </apex:column>
                        
                    </apex:pageBlockTable>
                                    
                    <!-- We put up a warning if results exceed 100 rows -->
                    <apex:outputPanel styleClass="fyi" rendered="{!overLimit}">
                        <br/>
                        Your search returned over 100 results, use a more specific search string if you do not see the desired {!$ObjectType.Product2.Label}.
                        <br/>
                    </apex:outputPanel>
                    
                </apex:outputPanel>
            
            </apex:pageBlock>
            <div id="scrollblock"/>
        <apex:outputPanel id="op"> 
         <apex:actionStatus id="searchStatus" >
            <apex:facet name="start">
                <div class="slds-spinner_container" style="position: fixed;" >
                    <div role="status" class="slds-spinner slds-spinner--large slds-spinner--brand">
                        <div class="slds-spinner__dot-a"></div>
                        <div class="slds-spinner__dot-b"></div>
                    </div>
                </div>
            </apex:facet>
        </apex:actionStatus>     
        </apex:outputPanel>   
        </apex:outputPanel>
        </div>
    </apex:form>

</apex:page>